name: Deploy to Production

# Define quando o workflow ser√° executado
on:
  push:
    branches:
      - main  # executa quando houver push na branch main
  workflow_dispatch:  # permite executar manualmente pela interface do GitHub

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest  # m√°quina virtual que executar√° o job
    environment: Production
    
    steps:
      # Passo 1: Fazer checkout do c√≥digo (opcional, mas √∫til para valida√ß√µes)
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Passo 2: Conectar via SSH e executar comandos
      - name: Execute deployment commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}          # IP do servidor
          username: ${{ secrets.SSH_USERNAME }}  # usu√°rio SSH
          key: ${{ secrets.SSH_PRIVATE_KEY }}    # chave privada
          port: ${{ secrets.SSH_PORT }}          # porta (padr√£o 22)
          timeout: 60s                           # timeout da conex√£o
          command_timeout: 30m                   # timeout dos comandos
          script: |
            echo "üöÄ Iniciando deploy..."
            
            # Navega at√© a pasta do projeto
            cd ~/Download/cash-by-card
            
            # Mostra a branch atual
            echo "üìç Branch atual:"
            git branch
            
            # Faz o pull das altera√ß√µes
            echo "üì• Baixando altera√ß√µes..."
            git pull origin main
            
            # Remove a imagem antiga
            docker rmi cashbycard:1.1 -f || true
            
            # Rebuild da imagen
            echo "üî® Construindo imagem..."
            docker build -t cashbycard:1.1 .

            # Navega at√© a pasta do nginx
            cd ~/Documents
            
            # Para os containers
            echo "üõë Parando containers..."
            docker compose down ${{ vars.SERVICE_NAME }}
            
            # Sobe os containers
            echo "üö¢ Subindo containers..."
            docker compose up -d ${{ vars.SERVICE_NAME }}
            
            # Mostra o status
            echo "‚úÖ Status dos containers:"
            docker compose ps
            
            echo "‚ú® Deploy conclu√≠do!"